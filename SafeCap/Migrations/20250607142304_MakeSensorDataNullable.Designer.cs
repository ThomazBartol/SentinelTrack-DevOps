// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using SafeCap.Infrastructure.Context;

#nullable disable

namespace SafeCap.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250607142304_MakeSensorDataNullable")]
    partial class MakeSensorDataNullable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SafeCap.Domain.Entities.Alert", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<string>("AlertType")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("RAW(16)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("SC_Alerts", (string)null);
                });

            modelBuilder.Entity("SafeCap.Domain.Entities.SensorReading", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<float?>("Humidity")
                        .HasColumnType("BINARY_FLOAT");

                    b.Property<float?>("Light")
                        .HasColumnType("BINARY_FLOAT");

                    b.Property<float?>("Temperature")
                        .HasColumnType("BINARY_FLOAT");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("RAW(16)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("SC_SensorReadings", (string)null);
                });

            modelBuilder.Entity("SafeCap.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("SC_Users", (string)null);
                });

            modelBuilder.Entity("SafeCap.Domain.Entities.Alert", b =>
                {
                    b.HasOne("SafeCap.Domain.Entities.User", "User")
                        .WithMany("Alerts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SafeCap.Domain.Entities.SensorReading", b =>
                {
                    b.HasOne("SafeCap.Domain.Entities.User", "User")
                        .WithMany("SensorReadings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SafeCap.Domain.Entities.User", b =>
                {
                    b.Navigation("Alerts");

                    b.Navigation("SensorReadings");
                });
#pragma warning restore 612, 618
        }
    }
}
